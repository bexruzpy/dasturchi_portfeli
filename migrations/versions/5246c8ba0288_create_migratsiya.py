"""create migratsiya

Revision ID: 5246c8ba0288
Revises: 
Create Date: 2025-04-18 02:50:42.316280

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5246c8ba0288'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('connection_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('datas', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_connection_types_id'), 'connection_types', ['id'], unique=False)
    op.create_table('languages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('view_key', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_languages_id'), 'languages', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('about_html', sa.Text(), nullable=True),
    sa.Column('files', sa.JSON(), nullable=True),
    sa.Column('result', sa.LargeBinary(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_table('skill_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('be_grade', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_skill_types_id'), 'skill_types', ['id'], unique=False)
    op.create_table('connections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('datas', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['type'], ['connection_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_connections_id'), 'connections', ['id'], unique=False)
    op.create_table('problem_and_answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('problem', sa.Text(), nullable=True),
    sa.Column('answer', sa.Text(), nullable=True),
    sa.Column('language', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['language'], ['languages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_problem_and_answer_id'), 'problem_and_answer', ['id'], unique=False)
    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('grade', sa.Integer(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['type'], ['skill_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skills_id'), 'skills', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('fullname', sa.String(), nullable=True),
    sa.Column('connects', sa.JSON(), nullable=True),
    sa.Column('loyihalar', sa.JSON(), nullable=True),
    sa.Column('startuplar', sa.JSON(), nullable=True),
    sa.Column('asosiy_loyiha', sa.Integer(), nullable=True),
    sa.Column('cariere', sa.Text(), nullable=True),
    sa.Column('solve_to_problems', sa.JSON(), nullable=True),
    sa.Column('skills', sa.JSON(), nullable=True),
    sa.Column('profile_image', sa.LargeBinary(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['asosiy_loyiha'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_skills_id'), table_name='skills')
    op.drop_table('skills')
    op.drop_index(op.f('ix_problem_and_answer_id'), table_name='problem_and_answer')
    op.drop_table('problem_and_answer')
    op.drop_index(op.f('ix_connections_id'), table_name='connections')
    op.drop_table('connections')
    op.drop_index(op.f('ix_skill_types_id'), table_name='skill_types')
    op.drop_table('skill_types')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_languages_id'), table_name='languages')
    op.drop_table('languages')
    op.drop_index(op.f('ix_connection_types_id'), table_name='connection_types')
    op.drop_table('connection_types')
    # ### end Alembic commands ###
